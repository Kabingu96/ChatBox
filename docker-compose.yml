version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: chatbox-db
    environment:
      POSTGRES_DB: chatbox
      POSTGRES_USER: chatbox
      POSTGRES_PASSWORD: chatbox_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbox -d chatbox"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatbox-backend
    environment:
      PORT: 8080
      DATABASE_URL: postgres://chatbox:chatbox_dev_password@postgres:5432/chatbox?sslmode=disable
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatbox-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_BACKEND_URL: http://localhost:8080
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: